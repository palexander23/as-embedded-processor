%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: P.Alexander
%%Title: Window .printEngine1.page.layout
%%CreationDate: Tue Mar 30 19:05:23 2021
%%BoundingBox: 0 0 613 1009
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog

%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 0.0 translate
90 rotate
0.75 0.75 scale
0 -816 translate
0 816 moveto 1344 816 lineto 1344 0 lineto 0 0 lineto closepath clip newpath
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1296 768 [
[(Page 1 of 1)]
] 11 -1 0 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1296 48 [
[(Printed by SimVision from Cadence Design Systems, Inc.)]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 48 [
[(Printed on Tue Mar 30 19:05:23 BST 2021)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 768 [
[(Waveform 1 - SimVision)]
] 22 -0 0 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 690 [
[(Cursor-Baseline = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 690 [
[(-970,580ps)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 702 [
[(Baseline = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 702 [
[(120,726,240ps)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 714 [
[(Cursor = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 714 [
[(119,755,660ps)]
] 11 -0 1 0 false DrawText
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
48 575 translate
1.32967 1.30233 scale
0 -27 translate
0 27 91 113 SetClipRegion
%% including "/tmp/tmp1sl74426.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.slist
%%CreationDate: Tue Mar 30 19:05:23 2021
%%BoundingBox: 0 27 91 113
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 112.0 translate
0.75 0.75 scale
0 -112 translate
0 112 moveto 121 112 lineto 121 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 112 moveto
121 112 lineto
121 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 112 moveto
120 112 lineto
120 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
119 111 lineto
119 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
119 95 lineto
119 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
119 79 lineto
119 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
119 63 lineto
119 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
119 47 lineto
119 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
119 31 lineto
119 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
119 15 lineto
119 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 102 moveto
10 6 lineto
stroke
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 102 moveto
26 102 lineto
stroke
grestore
gsave
24 96 translate
/TkPhoto { 
  gsave 
  32 dict begin 
  /dummyInteger exch def 
  /olddict exch def 
  olddict /DataSource get dup type /filetype ne { 
    olddict /DataSource 3 -1 roll 
    0 () /SubFileDecode filter put 
  } { 
    pop 
  } ifelse 
  /newdict olddict maxlength dict def 
  olddict newdict copy pop 
  /w newdict /Width get def 
  /pix w 7 add 8 idiv string def 
  /h newdict /Height get def 
  1 w div 1 h div matrix scale 
  olddict /ImageMatrix get exch matrix concatmatrix 
  matrix invertmatrix concat 
  newdict /Height 1 put 
  newdict /DataSource pix put 
  /mat [w 0 0 h 0 0] def 
  newdict /ImageMatrix mat put 
  0 1 h 1 sub { 
    mat 5 3 -1 roll neg put 
    0.000 0.000 0.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
    1.000 1.000 1.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
  } for 
  end 
  grestore 
} bind def 


/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 98 [
[(clk)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 86 moveto
26 86 lineto
stroke
grestore
gsave
24 80 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 82 [
[(n_reset)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 70 moveto
26 70 lineto
stroke
grestore
gsave
24 64 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 66 [
[(clk)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 54 moveto
26 54 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 58 moveto
13 58 lineto
13 50 lineto
6 50 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 58 moveto
14 58 lineto
14 50 lineto
6 50 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 54 moveto
12 54 lineto
stroke
10 56 moveto
10 52 lineto
stroke
grestore
gsave
22 47 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 50 [
[(Rd[4:0])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 38 moveto
26 38 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 42 moveto
13 42 lineto
13 34 lineto
6 34 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 42 moveto
14 42 lineto
14 34 lineto
6 34 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 38 moveto
12 38 lineto
stroke
10 40 moveto
10 36 lineto
stroke
grestore
gsave
22 31 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
48 34 translate
6 7 true matrix {
<08183878381808>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 34 [
[(_)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
61 34 [
[(d)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
67 34 [
[(a)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
73 34 [
[(t)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 34 [
[(a)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
85 34 [
[([)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
91 34 [
[(7)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
97 34 [
[(:)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
103 34 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 34 [
[(])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 22 moveto
26 22 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 26 moveto
13 26 lineto
13 18 lineto
6 18 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 26 moveto
14 26 lineto
14 18 lineto
6 18 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 22 moveto
12 22 lineto
stroke
10 24 moveto
10 20 lineto
stroke
grestore
gsave
22 15 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 18 [
[(Rs[4:0])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 6 moveto
26 6 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 10 moveto
13 10 lineto
13 2 lineto
6 2 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 10 moveto
14 10 lineto
14 2 lineto
6 2 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 6 moveto
12 6 lineto
stroke
10 8 moveto
10 4 lineto
stroke
grestore
gsave
22 -1 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
48 2 translate
6 7 true matrix {
<08183878381808>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 2 [
[(_)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
61 2 [
[(d)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
67 2 [
[(a)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
73 2 [
[(t)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 2 [
[(a)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
85 2 [
[([)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
91 2 [
[(7)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
97 2 [
[(:)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
103 2 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 2 [
[(])]
] 9 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
168 575 translate
1 1.30233 scale
0 -27 translate
0 27 3 113 SetClipRegion
%% including "/tmp/tmp1sd74426.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sdata
%%CreationDate: Tue Mar 30 19:05:23 2021
%%BoundingBox: 0 27 3 113
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%EndSetup

%%Page: 1 1
save
0.0 112.0 translate
0.75 0.75 scale
0 -112 translate
0 112 moveto 3 112 lineto 3 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 112 moveto
3 112 lineto
3 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 112 moveto
2 112 lineto
2 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
1 111 lineto
1 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
1 95 lineto
1 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
1 79 lineto
1 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
1 63 lineto
1 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
1 47 lineto
1 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
1 31 lineto
1 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
1 15 lineto
1 -1 lineto
1 -1 lineto
closepath
fill
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
170 575 translate
1.33176 1.30233 scale
0 -27 translate
0 27 847 113 SetClipRegion
%% including "/tmp/tmp1sb74426.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sbox
%%CreationDate: Tue Mar 30 19:05:23 2021
%%BoundingBox: 0 27 847 113
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 112.0 translate
0.75 0.75 scale
0 -112 translate
0 112 moveto 1128 112 lineto 1128 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 112 moveto
1128 112 lineto
1128 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 112 moveto
1127 112 lineto
1127 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 111 moveto
1126 111 lineto
1126 95 lineto
2 95 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 95 moveto
1126 95 lineto
1126 79 lineto
2 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 79 moveto
1126 79 lineto
1126 63 lineto
2 63 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 63 moveto
1126 63 lineto
1126 47 lineto
2 47 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 47 moveto
1126 47 lineto
1126 31 lineto
2 31 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 31 moveto
1126 31 lineto
1126 15 lineto
2 15 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 15 moveto
1126 15 lineto
1126 -1 lineto
2 -1 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 97 moveto
2 97 lineto
2 109 lineto
13 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 109 moveto
13 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 97 moveto
126 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
126 97 moveto
126 109 lineto
137 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
137 109 moveto
137 97 lineto
171 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
171 97 moveto
171 109 lineto
182 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
182 109 moveto
182 97 lineto
216 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
216 97 moveto
216 109 lineto
227 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
227 109 moveto
227 97 lineto
261 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
261 97 moveto
261 109 lineto
272 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
272 109 moveto
272 97 lineto
305 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
305 97 moveto
305 109 lineto
317 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
317 109 moveto
317 97 lineto
350 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
350 97 moveto
350 109 lineto
362 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
362 109 moveto
362 97 lineto
395 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
395 97 moveto
395 109 lineto
407 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
407 109 moveto
407 97 lineto
440 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 97 moveto
440 109 lineto
452 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
452 109 moveto
452 97 lineto
485 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
485 97 moveto
485 109 lineto
497 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 109 moveto
497 97 lineto
530 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
530 97 moveto
530 109 lineto
542 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
542 109 moveto
542 97 lineto
575 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
575 97 moveto
575 109 lineto
586 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
586 109 moveto
586 97 lineto
620 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
620 97 moveto
620 109 lineto
631 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
631 109 moveto
631 97 lineto
665 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
665 97 moveto
665 109 lineto
676 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
676 109 moveto
676 97 lineto
710 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
710 97 moveto
710 109 lineto
721 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
721 109 moveto
721 97 lineto
755 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
755 97 moveto
755 109 lineto
766 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
766 109 moveto
766 97 lineto
800 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
800 97 moveto
800 109 lineto
811 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
811 109 moveto
811 97 lineto
845 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
845 97 moveto
845 109 lineto
856 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
856 109 moveto
856 97 lineto
890 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
890 97 moveto
890 109 lineto
901 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
901 109 moveto
901 97 lineto
935 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
935 97 moveto
935 109 lineto
946 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
946 109 moveto
946 97 lineto
980 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
980 97 moveto
980 109 lineto
991 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
991 109 moveto
991 97 lineto
1025 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1025 97 moveto
1025 109 lineto
1036 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1036 109 moveto
1036 97 lineto
1070 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1070 97 moveto
1070 109 lineto
1081 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1081 109 moveto
1081 97 lineto
1115 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1115 97 moveto
1115 109 lineto
1126 109 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1126 109 moveto
1126 97 lineto
1160 97 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 81 moveto
2 81 lineto
2 93 lineto
13 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 81 moveto
13 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 93 moveto
36 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 93 moveto
36 81 lineto
47 81 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
47 81 moveto
47 93 lineto
81 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
81 93 moveto
81 81 lineto
92 81 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
92 81 moveto
92 93 lineto
1429 93 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 65 moveto
2 65 lineto
2 77 lineto
13 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 77 moveto
13 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 65 moveto
126 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
126 65 moveto
126 77 lineto
137 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
137 77 moveto
137 65 lineto
171 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
171 65 moveto
171 77 lineto
182 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
182 77 moveto
182 65 lineto
216 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
216 65 moveto
216 77 lineto
227 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
227 77 moveto
227 65 lineto
261 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
261 65 moveto
261 77 lineto
272 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
272 77 moveto
272 65 lineto
305 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
305 65 moveto
305 77 lineto
317 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
317 77 moveto
317 65 lineto
350 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
350 65 moveto
350 77 lineto
362 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
362 77 moveto
362 65 lineto
395 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
395 65 moveto
395 77 lineto
407 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
407 77 moveto
407 65 lineto
440 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 65 moveto
440 77 lineto
452 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
452 77 moveto
452 65 lineto
485 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
485 65 moveto
485 77 lineto
497 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 77 moveto
497 65 lineto
530 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
530 65 moveto
530 77 lineto
542 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
542 77 moveto
542 65 lineto
575 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
575 65 moveto
575 77 lineto
586 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
586 77 moveto
586 65 lineto
620 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
620 65 moveto
620 77 lineto
631 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
631 77 moveto
631 65 lineto
665 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
665 65 moveto
665 77 lineto
676 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
676 77 moveto
676 65 lineto
710 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
710 65 moveto
710 77 lineto
721 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
721 77 moveto
721 65 lineto
755 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
755 65 moveto
755 77 lineto
766 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
766 77 moveto
766 65 lineto
800 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
800 65 moveto
800 77 lineto
811 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
811 77 moveto
811 65 lineto
845 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
845 65 moveto
845 77 lineto
856 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
856 77 moveto
856 65 lineto
890 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
890 65 moveto
890 77 lineto
901 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
901 77 moveto
901 65 lineto
935 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
935 65 moveto
935 77 lineto
946 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
946 77 moveto
946 65 lineto
980 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
980 65 moveto
980 77 lineto
991 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
991 77 moveto
991 65 lineto
1025 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1025 65 moveto
1025 77 lineto
1036 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1036 77 moveto
1036 65 lineto
1070 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1070 65 moveto
1070 77 lineto
1081 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1081 77 moveto
1081 65 lineto
1115 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1115 65 moveto
1115 77 lineto
1126 77 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1126 77 moveto
1126 65 lineto
1160 65 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 49 moveto
2 49 lineto
2 61 lineto
13 61 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
4 51 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 51 [
[()]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 61 moveto
13 49 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 55 moveto
15 61 lineto
101 61 lineto
103 55 lineto
101 49 lineto
15 49 lineto
13 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 51 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
103 55 moveto
105 61 lineto
146 61 lineto
148 55 lineto
146 49 lineto
105 49 lineto
103 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 51 [
[(03)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
148 55 moveto
150 61 lineto
191 61 lineto
193 55 lineto
191 49 lineto
150 49 lineto
148 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
154 51 [
[(04)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
193 55 moveto
195 61 lineto
236 61 lineto
238 55 lineto
236 49 lineto
195 49 lineto
193 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
199 51 [
[(05)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
238 55 moveto
240 61 lineto
281 61 lineto
283 55 lineto
281 49 lineto
240 49 lineto
238 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
244 51 [
[(06)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
283 55 moveto
285 61 lineto
326 61 lineto
328 55 lineto
326 49 lineto
285 49 lineto
283 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
289 51 [
[(07)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
328 55 moveto
330 61 lineto
371 61 lineto
373 55 lineto
371 49 lineto
330 49 lineto
328 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
334 51 [
[(08)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
373 55 moveto
375 61 lineto
416 61 lineto
418 55 lineto
416 49 lineto
375 49 lineto
373 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
379 51 [
[(09)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
418 55 moveto
420 61 lineto
461 61 lineto
463 55 lineto
461 49 lineto
420 49 lineto
418 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
424 51 [
[(0A)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
463 55 moveto
465 61 lineto
506 61 lineto
508 55 lineto
506 49 lineto
465 49 lineto
463 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
469 51 [
[(0B)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
508 55 moveto
510 61 lineto
551 61 lineto
553 55 lineto
551 49 lineto
510 49 lineto
508 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
514 51 [
[(0C)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
553 55 moveto
555 61 lineto
596 61 lineto
598 55 lineto
596 49 lineto
555 49 lineto
553 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
559 51 [
[(0D)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
598 55 moveto
600 61 lineto
641 61 lineto
643 55 lineto
641 49 lineto
600 49 lineto
598 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
604 51 [
[(0E)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
643 55 moveto
645 61 lineto
686 61 lineto
688 55 lineto
686 49 lineto
645 49 lineto
643 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
649 51 [
[(0F)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
688 55 moveto
690 61 lineto
731 61 lineto
733 55 lineto
731 49 lineto
690 49 lineto
688 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
694 51 [
[(10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
733 55 moveto
735 61 lineto
776 61 lineto
778 55 lineto
776 49 lineto
735 49 lineto
733 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
739 51 [
[(11)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
778 55 moveto
780 61 lineto
821 61 lineto
823 55 lineto
821 49 lineto
780 49 lineto
778 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
784 51 [
[(12)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
823 55 moveto
825 61 lineto
865 61 lineto
867 55 lineto
865 49 lineto
825 49 lineto
823 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
829 51 [
[(13)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
867 55 moveto
869 61 lineto
910 61 lineto
912 55 lineto
910 49 lineto
869 49 lineto
867 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
873 51 [
[(14)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
912 55 moveto
914 61 lineto
955 61 lineto
957 55 lineto
955 49 lineto
914 49 lineto
912 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
918 51 [
[(15)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
957 55 moveto
959 61 lineto
1000 61 lineto
1002 55 lineto
1000 49 lineto
959 49 lineto
957 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
963 51 [
[(16)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1002 55 moveto
1004 61 lineto
1045 61 lineto
1047 55 lineto
1045 49 lineto
1004 49 lineto
1002 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 51 [
[(17)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1047 55 moveto
1049 61 lineto
1090 61 lineto
1092 55 lineto
1090 49 lineto
1049 49 lineto
1047 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1053 51 [
[(18)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1092 55 moveto
1094 61 lineto
1135 61 lineto
1137 55 lineto
1135 49 lineto
1094 49 lineto
1092 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1098 51 [
[(19)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 33 moveto
2 33 lineto
2 45 lineto
13 45 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
4 35 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 35 [
[()]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 45 moveto
13 33 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 39 moveto
15 45 lineto
124 45 lineto
126 39 lineto
124 33 lineto
15 33 lineto
13 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
126 39 moveto
128 45 lineto
146 45 lineto
148 39 lineto
146 33 lineto
128 33 lineto
126 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
132 35 [
[(03)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
148 39 moveto
150 45 lineto
169 45 lineto
171 39 lineto
169 33 lineto
150 33 lineto
148 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
154 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
171 39 moveto
173 45 lineto
191 45 lineto
193 39 lineto
191 33 lineto
173 33 lineto
171 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
177 35 [
[(04)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
193 39 moveto
195 45 lineto
214 45 lineto
216 39 lineto
214 33 lineto
195 33 lineto
193 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
199 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
216 39 moveto
218 45 lineto
236 45 lineto
238 39 lineto
236 33 lineto
218 33 lineto
216 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
222 35 [
[(05)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
238 39 moveto
240 45 lineto
259 45 lineto
261 39 lineto
259 33 lineto
240 33 lineto
238 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
244 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
261 39 moveto
263 45 lineto
281 45 lineto
283 39 lineto
281 33 lineto
263 33 lineto
261 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
267 35 [
[(06)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
283 39 moveto
285 45 lineto
303 45 lineto
305 39 lineto
303 33 lineto
285 33 lineto
283 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
289 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
305 39 moveto
307 45 lineto
326 45 lineto
328 39 lineto
326 33 lineto
307 33 lineto
305 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
311 35 [
[(07)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
328 39 moveto
330 45 lineto
348 45 lineto
350 39 lineto
348 33 lineto
330 33 lineto
328 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
334 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
350 39 moveto
352 45 lineto
371 45 lineto
373 39 lineto
371 33 lineto
352 33 lineto
350 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
356 35 [
[(08)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
373 39 moveto
375 45 lineto
393 45 lineto
395 39 lineto
393 33 lineto
375 33 lineto
373 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
379 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
395 39 moveto
397 45 lineto
416 45 lineto
418 39 lineto
416 33 lineto
397 33 lineto
395 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
401 35 [
[(09)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
418 39 moveto
420 45 lineto
438 45 lineto
440 39 lineto
438 33 lineto
420 33 lineto
418 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
424 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 39 moveto
442 45 lineto
461 45 lineto
463 39 lineto
461 33 lineto
442 33 lineto
440 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
446 35 [
[(0A)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
463 39 moveto
465 45 lineto
483 45 lineto
485 39 lineto
483 33 lineto
465 33 lineto
463 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
469 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
485 39 moveto
487 45 lineto
506 45 lineto
508 39 lineto
506 33 lineto
487 33 lineto
485 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
491 35 [
[(0B)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
508 39 moveto
510 45 lineto
528 45 lineto
530 39 lineto
528 33 lineto
510 33 lineto
508 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
514 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
530 39 moveto
532 45 lineto
551 45 lineto
553 39 lineto
551 33 lineto
532 33 lineto
530 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
536 35 [
[(0C)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
553 39 moveto
555 45 lineto
573 45 lineto
575 39 lineto
573 33 lineto
555 33 lineto
553 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
559 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
575 39 moveto
577 45 lineto
596 45 lineto
598 39 lineto
596 33 lineto
577 33 lineto
575 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
581 35 [
[(0D)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
598 39 moveto
600 45 lineto
618 45 lineto
620 39 lineto
618 33 lineto
600 33 lineto
598 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
604 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
620 39 moveto
622 45 lineto
641 45 lineto
643 39 lineto
641 33 lineto
622 33 lineto
620 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
626 35 [
[(0E)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
643 39 moveto
645 45 lineto
663 45 lineto
665 39 lineto
663 33 lineto
645 33 lineto
643 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
649 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
665 39 moveto
667 45 lineto
686 45 lineto
688 39 lineto
686 33 lineto
667 33 lineto
665 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
671 35 [
[(0F)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
688 39 moveto
690 45 lineto
708 45 lineto
710 39 lineto
708 33 lineto
690 33 lineto
688 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
694 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
710 39 moveto
712 45 lineto
731 45 lineto
733 39 lineto
731 33 lineto
712 33 lineto
710 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
716 35 [
[(10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
733 39 moveto
735 45 lineto
753 45 lineto
755 39 lineto
753 33 lineto
735 33 lineto
733 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
739 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
755 39 moveto
757 45 lineto
776 45 lineto
778 39 lineto
776 33 lineto
757 33 lineto
755 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
761 35 [
[(11)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
778 39 moveto
780 45 lineto
798 45 lineto
800 39 lineto
798 33 lineto
780 33 lineto
778 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
784 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
800 39 moveto
802 45 lineto
821 45 lineto
823 39 lineto
821 33 lineto
802 33 lineto
800 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
806 35 [
[(12)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
823 39 moveto
825 45 lineto
843 45 lineto
845 39 lineto
843 33 lineto
825 33 lineto
823 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
829 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
845 39 moveto
847 45 lineto
865 45 lineto
867 39 lineto
865 33 lineto
847 33 lineto
845 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
851 35 [
[(13)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
867 39 moveto
869 45 lineto
888 45 lineto
890 39 lineto
888 33 lineto
869 33 lineto
867 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
873 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
890 39 moveto
892 45 lineto
910 45 lineto
912 39 lineto
910 33 lineto
892 33 lineto
890 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
896 35 [
[(14)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
912 39 moveto
914 45 lineto
933 45 lineto
935 39 lineto
933 33 lineto
914 33 lineto
912 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
918 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
935 39 moveto
937 45 lineto
955 45 lineto
957 39 lineto
955 33 lineto
937 33 lineto
935 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
941 35 [
[(15)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
957 39 moveto
959 45 lineto
978 45 lineto
980 39 lineto
978 33 lineto
959 33 lineto
957 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
963 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
980 39 moveto
982 45 lineto
1000 45 lineto
1002 39 lineto
1000 33 lineto
982 33 lineto
980 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
986 35 [
[(16)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1002 39 moveto
1004 45 lineto
1023 45 lineto
1025 39 lineto
1023 33 lineto
1004 33 lineto
1002 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1025 39 moveto
1027 45 lineto
1045 45 lineto
1047 39 lineto
1045 33 lineto
1027 33 lineto
1025 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1031 35 [
[(17)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1047 39 moveto
1049 45 lineto
1068 45 lineto
1070 39 lineto
1068 33 lineto
1049 33 lineto
1047 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1053 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1070 39 moveto
1072 45 lineto
1090 45 lineto
1092 39 lineto
1090 33 lineto
1072 33 lineto
1070 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1076 35 [
[(18)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1092 39 moveto
1094 45 lineto
1113 45 lineto
1115 39 lineto
1113 33 lineto
1094 33 lineto
1092 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1098 35 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1115 39 moveto
1117 45 lineto
1135 45 lineto
1137 39 lineto
1135 33 lineto
1117 33 lineto
1115 39 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1121 35 [
[(19)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 17 moveto
2 17 lineto
2 29 lineto
13 29 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
4 19 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 19 [
[()]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 29 moveto
13 17 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 23 moveto
15 29 lineto
101 29 lineto
103 23 lineto
101 17 lineto
15 17 lineto
13 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 19 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
103 23 moveto
105 29 lineto
146 29 lineto
148 23 lineto
146 17 lineto
105 17 lineto
103 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 19 [
[(02)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
148 23 moveto
150 29 lineto
191 29 lineto
193 23 lineto
191 17 lineto
150 17 lineto
148 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
154 19 [
[(03)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
193 23 moveto
195 29 lineto
236 29 lineto
238 23 lineto
236 17 lineto
195 17 lineto
193 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
199 19 [
[(04)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
238 23 moveto
240 29 lineto
281 29 lineto
283 23 lineto
281 17 lineto
240 17 lineto
238 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
244 19 [
[(05)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
283 23 moveto
285 29 lineto
326 29 lineto
328 23 lineto
326 17 lineto
285 17 lineto
283 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
289 19 [
[(06)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
328 23 moveto
330 29 lineto
371 29 lineto
373 23 lineto
371 17 lineto
330 17 lineto
328 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
334 19 [
[(07)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
373 23 moveto
375 29 lineto
416 29 lineto
418 23 lineto
416 17 lineto
375 17 lineto
373 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
379 19 [
[(08)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
418 23 moveto
420 29 lineto
461 29 lineto
463 23 lineto
461 17 lineto
420 17 lineto
418 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
424 19 [
[(09)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
463 23 moveto
465 29 lineto
506 29 lineto
508 23 lineto
506 17 lineto
465 17 lineto
463 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
469 19 [
[(0A)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
508 23 moveto
510 29 lineto
551 29 lineto
553 23 lineto
551 17 lineto
510 17 lineto
508 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
514 19 [
[(0B)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
553 23 moveto
555 29 lineto
596 29 lineto
598 23 lineto
596 17 lineto
555 17 lineto
553 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
559 19 [
[(0C)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
598 23 moveto
600 29 lineto
641 29 lineto
643 23 lineto
641 17 lineto
600 17 lineto
598 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
604 19 [
[(0D)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
643 23 moveto
645 29 lineto
686 29 lineto
688 23 lineto
686 17 lineto
645 17 lineto
643 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
649 19 [
[(0E)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
688 23 moveto
690 29 lineto
731 29 lineto
733 23 lineto
731 17 lineto
690 17 lineto
688 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
694 19 [
[(0F)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
733 23 moveto
735 29 lineto
776 29 lineto
778 23 lineto
776 17 lineto
735 17 lineto
733 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
739 19 [
[(10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
778 23 moveto
780 29 lineto
821 29 lineto
823 23 lineto
821 17 lineto
780 17 lineto
778 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
784 19 [
[(11)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
823 23 moveto
825 29 lineto
865 29 lineto
867 23 lineto
865 17 lineto
825 17 lineto
823 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
829 19 [
[(12)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
867 23 moveto
869 29 lineto
910 29 lineto
912 23 lineto
910 17 lineto
869 17 lineto
867 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
873 19 [
[(13)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
912 23 moveto
914 29 lineto
955 29 lineto
957 23 lineto
955 17 lineto
914 17 lineto
912 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
918 19 [
[(14)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
957 23 moveto
959 29 lineto
1000 29 lineto
1002 23 lineto
1000 17 lineto
959 17 lineto
957 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
963 19 [
[(15)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1002 23 moveto
1004 29 lineto
1045 29 lineto
1047 23 lineto
1045 17 lineto
1004 17 lineto
1002 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 19 [
[(16)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1047 23 moveto
1049 29 lineto
1090 29 lineto
1092 23 lineto
1090 17 lineto
1049 17 lineto
1047 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1053 19 [
[(17)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1092 23 moveto
1094 29 lineto
1135 29 lineto
1137 23 lineto
1135 17 lineto
1094 17 lineto
1092 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1098 19 [
[(18)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 1 moveto
2 1 lineto
2 13 lineto
13 13 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
4 3 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 3 [
[()]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 13 moveto
13 1 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
13 7 moveto
15 13 lineto
146 13 lineto
148 7 lineto
146 1 lineto
15 1 lineto
13 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 3 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
148 7 moveto
150 13 lineto
191 13 lineto
193 7 lineto
191 1 lineto
150 1 lineto
148 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
154 3 [
[(03)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
193 7 moveto
195 13 lineto
236 13 lineto
238 7 lineto
236 1 lineto
195 1 lineto
193 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
199 3 [
[(04)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
238 7 moveto
240 13 lineto
281 13 lineto
283 7 lineto
281 1 lineto
240 1 lineto
238 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
244 3 [
[(05)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
283 7 moveto
285 13 lineto
326 13 lineto
328 7 lineto
326 1 lineto
285 1 lineto
283 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
289 3 [
[(06)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
328 7 moveto
330 13 lineto
371 13 lineto
373 7 lineto
371 1 lineto
330 1 lineto
328 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
334 3 [
[(07)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
373 7 moveto
375 13 lineto
416 13 lineto
418 7 lineto
416 1 lineto
375 1 lineto
373 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
379 3 [
[(08)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
418 7 moveto
420 13 lineto
461 13 lineto
463 7 lineto
461 1 lineto
420 1 lineto
418 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
424 3 [
[(09)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
463 7 moveto
465 13 lineto
506 13 lineto
508 7 lineto
506 1 lineto
465 1 lineto
463 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
469 3 [
[(0A)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
508 7 moveto
510 13 lineto
551 13 lineto
553 7 lineto
551 1 lineto
510 1 lineto
508 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
514 3 [
[(0B)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
553 7 moveto
555 13 lineto
596 13 lineto
598 7 lineto
596 1 lineto
555 1 lineto
553 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
559 3 [
[(0C)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
598 7 moveto
600 13 lineto
641 13 lineto
643 7 lineto
641 1 lineto
600 1 lineto
598 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
604 3 [
[(0D)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
643 7 moveto
645 13 lineto
686 13 lineto
688 7 lineto
686 1 lineto
645 1 lineto
643 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
649 3 [
[(0E)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
688 7 moveto
690 13 lineto
731 13 lineto
733 7 lineto
731 1 lineto
690 1 lineto
688 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
694 3 [
[(0F)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
733 7 moveto
735 13 lineto
776 13 lineto
778 7 lineto
776 1 lineto
735 1 lineto
733 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
739 3 [
[(10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
778 7 moveto
780 13 lineto
821 13 lineto
823 7 lineto
821 1 lineto
780 1 lineto
778 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
784 3 [
[(11)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
823 7 moveto
825 13 lineto
865 13 lineto
867 7 lineto
865 1 lineto
825 1 lineto
823 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
829 3 [
[(12)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
867 7 moveto
869 13 lineto
910 13 lineto
912 7 lineto
910 1 lineto
869 1 lineto
867 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
873 3 [
[(13)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
912 7 moveto
914 13 lineto
955 13 lineto
957 7 lineto
955 1 lineto
914 1 lineto
912 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
918 3 [
[(14)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
957 7 moveto
959 13 lineto
1000 13 lineto
1002 7 lineto
1000 1 lineto
959 1 lineto
957 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
963 3 [
[(15)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1002 7 moveto
1004 13 lineto
1045 13 lineto
1047 7 lineto
1045 1 lineto
1004 1 lineto
1002 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1008 3 [
[(16)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1047 7 moveto
1049 13 lineto
1090 13 lineto
1092 7 lineto
1090 1 lineto
1049 1 lineto
1047 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1053 3 [
[(17)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1092 7 moveto
1094 13 lineto
1135 13 lineto
1137 7 lineto
1135 1 lineto
1094 1 lineto
1092 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1098 3 [
[(18)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0 112 moveto
1128 112 lineto
1128 0 lineto
0 0 lineto
closepath
clip
newpath
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
170 687 translate
1.33176 1.28261 scale
0 -14 translate
0 14 847 60 SetClipRegion
%% including "/tmp/tmp1mx74426.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.maxis
%%CreationDate: Tue Mar 30 19:05:23 2021
%%BoundingBox: 0 14 847 60
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 59.0 translate
0.75 0.75 scale
0 -59 translate
0 59 moveto 1128 59 lineto 1128 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 59 moveto
1128 59 lineto
1128 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 58 moveto
1126 58 lineto
1126 1 lineto
1 1 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
2 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
24 1 moveto
24 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
47 1 moveto
47 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
69 1 moveto
69 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
92 1 moveto
92 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
114 1 moveto
114 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
116 6 [
[(10,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
137 1 moveto
137 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
159 1 moveto
159 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
182 1 moveto
182 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
204 1 moveto
204 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
227 1 moveto
227 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
229 6 [
[(20,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
249 1 moveto
249 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
272 1 moveto
272 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
294 1 moveto
294 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
317 1 moveto
317 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
339 1 moveto
339 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
341 6 [
[(30,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
362 1 moveto
362 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
384 1 moveto
384 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
407 1 moveto
407 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
429 1 moveto
429 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
452 1 moveto
452 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
454 6 [
[(40,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
474 1 moveto
474 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
497 1 moveto
497 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
519 1 moveto
519 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
542 1 moveto
542 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
564 1 moveto
564 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
566 6 [
[(50,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
586 1 moveto
586 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
609 1 moveto
609 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
631 1 moveto
631 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
654 1 moveto
654 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
676 1 moveto
676 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
678 6 [
[(60,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
699 1 moveto
699 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
721 1 moveto
721 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
744 1 moveto
744 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
766 1 moveto
766 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
789 1 moveto
789 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
791 6 [
[(70,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
811 1 moveto
811 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
834 1 moveto
834 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
856 1 moveto
856 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
879 1 moveto
879 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
901 1 moveto
901 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
903 6 [
[(80,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
924 1 moveto
924 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
946 1 moveto
946 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
969 1 moveto
969 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
991 1 moveto
991 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1014 1 moveto
1014 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1016 6 [
[(90,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1036 1 moveto
1036 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1059 1 moveto
1059 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1081 1 moveto
1081 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1104 1 moveto
1104 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1126 1 moveto
1126 16 lineto
stroke
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
restore showpage

%%Trailer
end
%%EOF

