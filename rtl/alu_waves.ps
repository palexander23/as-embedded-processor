%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: P.Alexander
%%Title: Window .printEngine1.page.layout
%%CreationDate: Wed Mar 31 10:52:35 2021
%%BoundingBox: 0 0 596 1276
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog

%%BeginSetup
/CL 2 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 0.0 translate
90 rotate
0.7499 0.7499 scale
0 -794 translate
0 794 moveto 1701 794 lineto 1701 0 lineto 0 0 lineto closepath clip newpath
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1653 746 [
[(Page 1 of 1)]
] 11 -1 0 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1653 48 [
[(Printed by SimVision from Cadence Design Systems, Inc.)]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 48 [
[(Printed on Wed Mar 31 10:52:35 BST 2021)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 746 [
[(Waveform 1 - SimVision)]
] 22 -0 0 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 668 [
[(Cursor-Baseline = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 668 [
[(42,000,000ps)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 680 [
[(Baseline = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 680 [
[(0)]
] 11 -0 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 692 [
[(Cursor = )]
] 11 -1 1 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
174 692 [
[(42,000,000ps)]
] 11 -0 1 0 false DrawText
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
48 489 translate
1.32787 1.31343 scale
0 -43 translate
0 43 122 177 SetClipRegion
%% including "/tmp/tmp1sl53890.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.slist
%%CreationDate: Wed Mar 31 10:52:35 2021
%%BoundingBox: 0 43 122 177
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 176.0 translate
0.75 0.75 scale
0 -176 translate
0 176 moveto 162 176 lineto 162 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 176 moveto
162 176 lineto
162 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 176 moveto
161 176 lineto
161 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 175 moveto
160 175 lineto
160 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
160 159 lineto
160 143 lineto
1 143 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 143 moveto
160 143 lineto
160 127 lineto
1 127 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 127 moveto
160 127 lineto
160 111 lineto
1 111 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
160 111 lineto
160 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
160 95 lineto
160 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
160 79 lineto
160 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
160 63 lineto
160 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
160 47 lineto
160 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
160 31 lineto
160 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
160 15 lineto
160 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 166 moveto
10 6 lineto
stroke
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 166 moveto
26 166 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 170 moveto
13 170 lineto
13 162 lineto
6 162 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 170 moveto
14 170 lineto
14 162 lineto
6 162 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 166 moveto
12 166 lineto
stroke
10 168 moveto
10 164 lineto
stroke
grestore
gsave
24 160 translate
/TkPhoto { 
  gsave 
  32 dict begin 
  /dummyInteger exch def 
  /olddict exch def 
  olddict /DataSource get dup type /filetype ne { 
    olddict /DataSource 3 -1 roll 
    0 () /SubFileDecode filter put 
  } { 
    pop 
  } ifelse 
  /newdict olddict maxlength dict def 
  olddict newdict copy pop 
  /w newdict /Width get def 
  /pix w 7 add 8 idiv string def 
  /h newdict /Height get def 
  1 w div 1 h div matrix scale 
  olddict /ImageMatrix get exch matrix concatmatrix 
  matrix invertmatrix concat 
  newdict /Height 1 put 
  newdict /DataSource pix put 
  /mat [w 0 0 h 0 0] def 
  newdict /ImageMatrix mat put 
  0 1 h 1 sub { 
    mat 5 3 -1 roll neg put 
    0.000 0.000 0.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
    1.000 1.000 1.000 setrgbcolor 
    olddict /DataSource get pix readstring pop pop 
    newdict /DataSource pix put 
    newdict imagemask 
  } for 
  end 
  grestore 
} bind def 


/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFFFF00000008000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000
107FFFE08000107FFFE09B6F906490608000107FFFE0FFFFF0000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 162 [
[(signed\050a\051)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 150 moveto
26 150 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 154 moveto
13 154 lineto
13 146 lineto
6 146 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 154 moveto
14 154 lineto
14 146 lineto
6 146 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 150 moveto
12 150 lineto
stroke
10 152 moveto
10 148 lineto
stroke
grestore
gsave
24 144 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFFFF00000008000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000
107FFFE08000107FFFE09B6F906490608000107FFFE0FFFFF0000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 146 [
[(signed\050b\051)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 134 moveto
26 134 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 138 moveto
13 138 lineto
13 130 lineto
6 130 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 138 moveto
14 138 lineto
14 130 lineto
6 130 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 134 moveto
12 134 lineto
stroke
10 136 moveto
10 132 lineto
stroke
grestore
gsave
24 128 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFFFF00000008000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000
107FFFE08000107FFFE09B6F906490608000107FFFE0FFFFF0000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 130 [
[(signed\050immediate\051)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 118 moveto
26 118 lineto
stroke
grestore
gsave
24 112 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 114 [
[(switches[8])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 102 moveto
26 102 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 106 moveto
13 106 lineto
13 98 lineto
6 98 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 106 moveto
14 106 lineto
14 98 lineto
6 98 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 102 moveto
12 102 lineto
stroke
10 104 moveto
10 100 lineto
stroke
grestore
gsave
24 96 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFFFF00000008000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000
107FFFE08000107FFFE09B6F906490608000107FFFE0FFFFF0000000>
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
48 98 translate
6 7 true matrix {
<08183878381808>
} imagemask
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
55 98 [
[(\050)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
61 98 [
[(\134)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
67 98 [
[(s)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
73 98 [
[(w)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
79 98 [
[(i)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
85 98 [
[(t)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
91 98 [
[(c)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
97 98 [
[(h)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
103 98 [
[(e)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 98 [
[(s)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
115 98 [
[([)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
121 98 [
[(7)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
127 98 [
[(:)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
133 98 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
139 98 [
[(])]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 98 [
[( )]
] 9 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
151 98 [
[(\051)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 86 moveto
26 86 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 90 moveto
13 90 lineto
13 82 lineto
6 82 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 90 moveto
14 90 lineto
14 82 lineto
6 82 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 86 moveto
12 86 lineto
stroke
10 88 moveto
10 84 lineto
stroke
grestore
gsave
22 79 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 82 [
[(a_sel[1:0])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 70 moveto
26 70 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 74 moveto
13 74 lineto
13 66 lineto
6 66 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 74 moveto
14 74 lineto
14 66 lineto
6 66 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 70 moveto
12 70 lineto
stroke
10 72 moveto
10 68 lineto
stroke
grestore
gsave
22 63 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 66 [
[(b_sel[1:0])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 54 moveto
26 54 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 58 moveto
13 58 lineto
13 50 lineto
6 50 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 58 moveto
14 58 lineto
14 50 lineto
6 50 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 54 moveto
12 54 lineto
stroke
10 56 moveto
10 52 lineto
stroke
grestore
gsave
22 47 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 50 [
[(func[2:0])]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 38 moveto
26 38 lineto
stroke
grestore
gsave
24 32 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
0FFF0000000008010007FE0008010007FE0008010007FE0008010037FEC008010037FEC008010037FEC00801
0037FEC008010007FE0008010007FE0008010007FE000FFF00000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 34 [
[(imm)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 22 moveto
26 22 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 26 moveto
13 26 lineto
13 18 lineto
6 18 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 26 moveto
14 26 lineto
14 18 lineto
6 18 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 22 moveto
12 22 lineto
stroke
10 24 moveto
10 20 lineto
stroke
grestore
gsave
24 16 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [1 0]
>>
1 TkPhoto
FFFFF00000008000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000107FFFE08000
107FFFE08000107FFFE09B6F906490608000107FFFE0FFFFF0000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 18 [
[(signed\050result\051)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 6 moveto
26 6 lineto
stroke
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 10 moveto
13 10 lineto
13 2 lineto
6 2 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 10 moveto
14 10 lineto
14 2 lineto
6 2 lineto
closepath
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 6 moveto
12 6 lineto
stroke
10 8 moveto
10 4 lineto
stroke
grestore
gsave
22 -1 translate
/DeviceGray setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 1
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [1 0]
>>
1 TkPhoto
1FF0000000001010000FE00013FE000C00001202006DFC00127FC06D80001240406DBF801240400DBF801240
400DBFB01E404001BFB002404001BFB003C040003F80004040003F80007FC0000000000000000000>
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
48 2 [
[(flags[3:0])]
] 9 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
209 489 translate
1 1.31343 scale
0 -43 translate
0 43 3 177 SetClipRegion
%% including "/tmp/tmp1sd53890.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sdata
%%CreationDate: Wed Mar 31 10:52:35 2021
%%BoundingBox: 0 43 3 177
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%EndSetup

%%Page: 1 1
save
0.0 176.0 translate
0.75 0.75 scale
0 -176 translate
0 176 moveto 3 176 lineto 3 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 176 moveto
3 176 lineto
3 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 176 moveto
2 176 lineto
2 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 175 moveto
1 175 lineto
1 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
1 159 lineto
1 143 lineto
1 143 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 143 moveto
1 143 lineto
1 127 lineto
1 127 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 127 moveto
1 127 lineto
1 111 lineto
1 111 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 111 moveto
1 111 lineto
1 95 lineto
1 95 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 95 moveto
1 95 lineto
1 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
1 79 lineto
1 63 lineto
1 63 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 63 moveto
1 63 lineto
1 47 lineto
1 47 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 47 moveto
1 47 lineto
1 31 lineto
1 31 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 31 moveto
1 31 lineto
1 15 lineto
1 15 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 15 moveto
1 15 lineto
1 -1 lineto
1 -1 lineto
closepath
fill
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
211 489 translate
1.3321 1.31343 scale
0 -43 translate
0 43 1084 177 SetClipRegion
%% including "/tmp/tmp1sb53890.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sbox
%%CreationDate: Wed Mar 31 10:52:35 2021
%%BoundingBox: 0 43 1084 177
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 176.0 translate
0.75 0.75 scale
0 -176 translate
0 176 moveto 1444 176 lineto 1444 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 176 moveto
1444 176 lineto
1444 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 176 moveto
1443 176 lineto
1443 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 175 moveto
1441 175 lineto
1441 159 lineto
2 159 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 159 moveto
1441 159 lineto
1441 143 lineto
2 143 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 143 moveto
1441 143 lineto
1441 127 lineto
2 127 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 127 moveto
1441 127 lineto
1441 111 lineto
2 111 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 111 moveto
1441 111 lineto
1441 95 lineto
2 95 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 95 moveto
1441 95 lineto
1441 79 lineto
2 79 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 79 moveto
1441 79 lineto
1441 63 lineto
2 63 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 63 moveto
1441 63 lineto
1441 47 lineto
2 47 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 47 moveto
1441 47 lineto
1441 31 lineto
2 31 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 31 moveto
1441 31 lineto
1441 15 lineto
2 15 lineto
closepath
fill
grestore
gsave
0.949 0.949 0.949 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 15 moveto
1441 15 lineto
1441 -1 lineto
2 -1 lineto
closepath
fill
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1441 176 moveto
1441 0 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 176 moveto
2 0 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 167 moveto
4 173 lineto
34 173 lineto
36 167 lineto
34 161 lineto
4 161 lineto
2 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 163 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 167 moveto
38 173 lineto
103 173 lineto
105 167 lineto
103 161 lineto
38 161 lineto
36 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 163 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
105 167 moveto
107 173 lineto
171 173 lineto
173 167 lineto
171 161 lineto
107 161 lineto
105 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
111 163 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
173 167 moveto
175 173 lineto
240 173 lineto
242 167 lineto
240 161 lineto
175 161 lineto
173 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
179 163 [
[(-1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 167 moveto
244 173 lineto
308 173 lineto
310 167 lineto
308 161 lineto
244 161 lineto
242 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
248 163 [
[(5)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
310 167 moveto
312 173 lineto
377 173 lineto
379 167 lineto
377 161 lineto
312 161 lineto
310 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
316 163 [
[(127)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
379 167 moveto
381 173 lineto
445 173 lineto
447 167 lineto
445 161 lineto
381 161 lineto
379 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
385 163 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
447 167 moveto
449 173 lineto
582 173 lineto
584 167 lineto
582 161 lineto
449 161 lineto
447 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
453 163 [
[(-128)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
584 167 moveto
586 173 lineto
891 173 lineto
893 167 lineto
891 161 lineto
586 161 lineto
584 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
590 163 [
[(-24)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 167 moveto
895 173 lineto
925 173 lineto
927 167 lineto
925 161 lineto
895 161 lineto
893 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 163 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
927 167 moveto
929 173 lineto
1165 173 lineto
1167 167 lineto
1165 161 lineto
929 161 lineto
927 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
933 163 [
[(-24)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 167 moveto
1169 173 lineto
1199 173 lineto
1201 167 lineto
1199 161 lineto
1169 161 lineto
1167 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 163 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1201 167 moveto
1203 173 lineto
1233 173 lineto
1235 167 lineto
1233 161 lineto
1203 161 lineto
1201 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1207 163 [
[(125)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 167 moveto
1237 173 lineto
1268 173 lineto
1270 167 lineto
1268 161 lineto
1237 161 lineto
1235 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1241 163 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1270 167 moveto
1272 173 lineto
1405 173 lineto
1407 167 lineto
1405 161 lineto
1272 161 lineto
1270 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1276 163 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1407 167 moveto
1409 173 lineto
1439 173 lineto
1441 167 lineto
1439 161 lineto
1409 161 lineto
1407 167 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1413 163 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 151 moveto
4 157 lineto
34 157 lineto
36 151 lineto
34 145 lineto
4 145 lineto
2 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 147 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 151 moveto
38 157 lineto
103 157 lineto
105 151 lineto
103 145 lineto
38 145 lineto
36 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 147 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
105 151 moveto
107 157 lineto
171 157 lineto
173 151 lineto
171 145 lineto
107 145 lineto
105 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
111 147 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
173 151 moveto
175 157 lineto
240 157 lineto
242 151 lineto
240 145 lineto
175 145 lineto
173 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
179 147 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 151 moveto
244 157 lineto
308 157 lineto
310 151 lineto
308 145 lineto
244 145 lineto
242 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
248 147 [
[(-10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
310 151 moveto
312 157 lineto
377 157 lineto
379 151 lineto
377 145 lineto
312 145 lineto
310 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
316 147 [
[(127)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
379 151 moveto
381 157 lineto
514 157 lineto
516 151 lineto
514 145 lineto
381 145 lineto
379 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
385 147 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
516 151 moveto
518 157 lineto
582 157 lineto
584 151 lineto
582 145 lineto
518 145 lineto
516 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
522 147 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
584 151 moveto
586 157 lineto
891 157 lineto
893 151 lineto
891 145 lineto
586 145 lineto
584 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
590 147 [
[(45)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 151 moveto
895 157 lineto
925 157 lineto
927 151 lineto
925 145 lineto
895 145 lineto
893 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 147 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
927 151 moveto
929 157 lineto
1165 157 lineto
1167 151 lineto
1165 145 lineto
929 145 lineto
927 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
933 147 [
[(45)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 151 moveto
1169 157 lineto
1199 157 lineto
1201 151 lineto
1199 145 lineto
1169 145 lineto
1167 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 147 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1201 151 moveto
1203 157 lineto
1233 157 lineto
1235 151 lineto
1233 145 lineto
1203 145 lineto
1201 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1207 147 [
[(3)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 151 moveto
1237 157 lineto
1268 157 lineto
1270 151 lineto
1268 145 lineto
1237 145 lineto
1235 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1241 147 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1270 151 moveto
1272 157 lineto
1336 157 lineto
1338 151 lineto
1336 145 lineto
1272 145 lineto
1270 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1276 147 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1338 151 moveto
1340 157 lineto
1405 157 lineto
1407 151 lineto
1405 145 lineto
1340 145 lineto
1338 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1344 147 [
[(-2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1407 151 moveto
1409 157 lineto
1439 157 lineto
1441 151 lineto
1439 145 lineto
1409 145 lineto
1407 151 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1413 147 [
[(-128)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 135 moveto
4 141 lineto
1096 141 lineto
1098 135 lineto
1096 129 lineto
4 129 lineto
2 135 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 131 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1098 135 moveto
1100 141 lineto
1165 141 lineto
1167 135 lineto
1165 129 lineto
1100 129 lineto
1098 135 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1104 131 [
[(15)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 135 moveto
1169 141 lineto
1233 141 lineto
1235 135 lineto
1233 129 lineto
1169 129 lineto
1167 135 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 131 [
[(-5)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 135 moveto
1237 141 lineto
1439 141 lineto
1441 135 lineto
1439 129 lineto
1237 129 lineto
1235 135 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1241 131 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 113 moveto
687 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
687 113 moveto
824 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
824 113 moveto
824 125 lineto
893 125 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 125 moveto
893 113 lineto
1030 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1030 113 moveto
1030 125 lineto
1167 125 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 125 moveto
1167 113 lineto
1441 113 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 103 moveto
4 109 lineto
685 109 lineto
687 103 lineto
685 97 lineto
4 97 lineto
2 103 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 99 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
687 103 moveto
689 109 lineto
822 109 lineto
824 103 lineto
822 97 lineto
689 97 lineto
687 103 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
693 99 [
[(85)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
824 103 moveto
826 109 lineto
891 109 lineto
893 103 lineto
891 97 lineto
826 97 lineto
824 103 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
830 99 [
[(85)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 103 moveto
895 109 lineto
1028 109 lineto
1030 103 lineto
1028 97 lineto
895 97 lineto
893 103 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 99 [
[(85)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1030 103 moveto
1032 109 lineto
1165 109 lineto
1167 103 lineto
1165 97 lineto
1032 97 lineto
1030 103 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1036 99 [
[(85)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 103 moveto
1169 109 lineto
1439 109 lineto
1441 103 lineto
1439 97 lineto
1169 97 lineto
1167 103 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 99 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 87 moveto
4 93 lineto
685 93 lineto
687 87 lineto
685 81 lineto
4 81 lineto
2 87 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 83 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
687 87 moveto
689 93 lineto
754 93 lineto
756 87 lineto
754 81 lineto
689 81 lineto
687 87 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
693 83 [
[(01)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
756 87 moveto
758 93 lineto
891 93 lineto
893 87 lineto
891 81 lineto
758 81 lineto
756 87 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
762 83 [
[(10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 87 moveto
895 93 lineto
1439 93 lineto
1441 87 lineto
1439 81 lineto
895 81 lineto
893 87 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 83 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 71 moveto
4 77 lineto
891 77 lineto
893 71 lineto
891 65 lineto
4 65 lineto
2 71 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 67 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 71 moveto
895 77 lineto
959 77 lineto
961 71 lineto
959 65 lineto
895 65 lineto
893 71 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 67 [
[(01)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
961 71 moveto
963 77 lineto
1165 77 lineto
1167 71 lineto
1165 65 lineto
963 65 lineto
961 71 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
967 67 [
[(10)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 71 moveto
1169 77 lineto
1439 77 lineto
1441 71 lineto
1439 65 lineto
1169 65 lineto
1167 71 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 67 [
[(00)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 49 moveto
2 49 lineto
2 61 lineto
36 61 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 51 [
[(xxx)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 61 moveto
36 49 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 55 moveto
38 61 lineto
377 61 lineto
379 55 lineto
377 49 lineto
38 49 lineto
36 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 51 [
[(010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
379 55 moveto
381 61 lineto
582 61 lineto
584 55 lineto
582 49 lineto
381 49 lineto
379 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
385 51 [
[(011)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
584 55 moveto
586 61 lineto
651 61 lineto
653 55 lineto
651 49 lineto
586 49 lineto
584 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
590 51 [
[(000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
653 55 moveto
655 61 lineto
720 61 lineto
722 55 lineto
720 49 lineto
655 49 lineto
653 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
659 51 [
[(001)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
722 55 moveto
724 61 lineto
925 61 lineto
927 55 lineto
925 49 lineto
724 49 lineto
722 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
728 51 [
[(000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
927 55 moveto
929 61 lineto
1199 61 lineto
1201 55 lineto
1199 49 lineto
929 49 lineto
927 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
933 51 [
[(001)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1201 55 moveto
1203 61 lineto
1268 61 lineto
1270 55 lineto
1268 49 lineto
1203 49 lineto
1201 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1207 51 [
[(010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1270 55 moveto
1272 61 lineto
1439 61 lineto
1441 55 lineto
1439 49 lineto
1272 49 lineto
1270 55 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1276 51 [
[(100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 33 moveto
1098 33 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1098 33 moveto
1098 45 lineto
1235 45 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 45 moveto
1235 33 lineto
1441 33 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 23 moveto
4 29 lineto
34 29 lineto
36 23 lineto
34 17 lineto
4 17 lineto
2 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 19 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 23 moveto
38 29 lineto
103 29 lineto
105 23 lineto
103 17 lineto
38 17 lineto
36 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 19 [
[(2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
105 23 moveto
107 29 lineto
240 29 lineto
242 23 lineto
240 17 lineto
107 17 lineto
105 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
111 19 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 23 moveto
244 29 lineto
308 29 lineto
310 23 lineto
308 17 lineto
244 17 lineto
242 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
248 19 [
[(-5)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
310 23 moveto
312 29 lineto
377 29 lineto
379 23 lineto
377 17 lineto
312 17 lineto
310 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
316 19 [
[(-2)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
379 23 moveto
381 29 lineto
445 29 lineto
447 23 lineto
445 17 lineto
381 17 lineto
379 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
385 19 [
[(1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
447 23 moveto
449 29 lineto
514 29 lineto
516 23 lineto
514 17 lineto
449 17 lineto
447 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
453 19 [
[(127)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
516 23 moveto
518 29 lineto
582 29 lineto
584 23 lineto
582 17 lineto
518 17 lineto
516 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
522 19 [
[(-128)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
584 23 moveto
586 29 lineto
651 29 lineto
653 23 lineto
651 17 lineto
586 17 lineto
584 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
590 19 [
[(-24)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
653 23 moveto
655 29 lineto
720 29 lineto
722 23 lineto
720 17 lineto
655 17 lineto
653 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
659 19 [
[(45)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
722 23 moveto
724 29 lineto
754 29 lineto
756 23 lineto
754 17 lineto
724 17 lineto
722 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
728 19 [
[(85)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
756 23 moveto
758 29 lineto
822 29 lineto
824 23 lineto
822 17 lineto
758 17 lineto
756 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
762 19 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
824 23 moveto
826 29 lineto
891 29 lineto
893 23 lineto
891 17 lineto
826 17 lineto
824 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
830 19 [
[(-1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 23 moveto
895 29 lineto
925 29 lineto
927 23 lineto
925 17 lineto
895 17 lineto
893 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 19 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
927 23 moveto
929 29 lineto
959 29 lineto
961 23 lineto
959 17 lineto
929 17 lineto
927 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
933 19 [
[(85)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
961 23 moveto
963 29 lineto
1028 29 lineto
1030 23 lineto
1028 17 lineto
963 17 lineto
961 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
967 19 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1030 23 moveto
1032 29 lineto
1096 29 lineto
1098 23 lineto
1096 17 lineto
1032 17 lineto
1030 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1036 19 [
[(-1)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1098 23 moveto
1100 29 lineto
1165 29 lineto
1167 23 lineto
1165 17 lineto
1100 17 lineto
1098 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1104 19 [
[(15)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 23 moveto
1169 29 lineto
1199 29 lineto
1201 23 lineto
1199 17 lineto
1169 17 lineto
1167 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 19 [
[(-5)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1201 23 moveto
1203 29 lineto
1233 29 lineto
1235 23 lineto
1233 17 lineto
1203 17 lineto
1201 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1207 19 [
[(120)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 23 moveto
1237 29 lineto
1268 29 lineto
1270 23 lineto
1268 17 lineto
1237 17 lineto
1235 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1241 19 [
[(0)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1270 23 moveto
1272 29 lineto
1336 29 lineto
1338 23 lineto
1336 17 lineto
1272 17 lineto
1270 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1276 19 [
[(4)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1338 23 moveto
1340 29 lineto
1405 29 lineto
1407 23 lineto
1405 17 lineto
1340 17 lineto
1338 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1344 19 [
[(-4)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1407 23 moveto
1409 29 lineto
1439 29 lineto
1441 23 lineto
1439 17 lineto
1409 17 lineto
1407 23 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1413 19 [
[(-128)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 7 moveto
4 13 lineto
34 13 lineto
36 7 lineto
34 1 lineto
4 1 lineto
2 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 3 [
[(0010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
36 7 moveto
38 13 lineto
103 13 lineto
105 7 lineto
103 1 lineto
38 1 lineto
36 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 3 [
[(0000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
105 7 moveto
107 13 lineto
171 13 lineto
173 7 lineto
171 1 lineto
107 1 lineto
105 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
111 3 [
[(0010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
173 7 moveto
175 13 lineto
240 13 lineto
242 7 lineto
240 1 lineto
175 1 lineto
173 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
179 3 [
[(0011)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 7 moveto
244 13 lineto
308 13 lineto
310 7 lineto
308 1 lineto
244 1 lineto
242 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
248 3 [
[(0100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
310 7 moveto
312 13 lineto
377 13 lineto
379 7 lineto
377 1 lineto
312 1 lineto
310 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
316 3 [
[(1100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
379 7 moveto
381 13 lineto
445 13 lineto
447 7 lineto
445 1 lineto
381 1 lineto
379 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
385 3 [
[(0000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
447 7 moveto
449 13 lineto
514 13 lineto
516 7 lineto
514 1 lineto
449 1 lineto
447 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
453 3 [
[(0001)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
516 7 moveto
518 13 lineto
582 13 lineto
584 7 lineto
582 1 lineto
518 1 lineto
516 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
522 3 [
[(1101)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
584 7 moveto
586 13 lineto
651 13 lineto
653 7 lineto
651 1 lineto
586 1 lineto
584 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
590 3 [
[(0100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
653 7 moveto
655 13 lineto
754 13 lineto
756 7 lineto
754 1 lineto
655 1 lineto
653 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
659 3 [
[(0000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
756 7 moveto
758 13 lineto
822 13 lineto
824 7 lineto
822 1 lineto
758 1 lineto
756 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
762 3 [
[(0010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
824 7 moveto
826 13 lineto
891 13 lineto
893 7 lineto
891 1 lineto
826 1 lineto
824 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
830 3 [
[(0100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 7 moveto
895 13 lineto
925 13 lineto
927 7 lineto
925 1 lineto
895 1 lineto
893 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
899 3 [
[(0010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
927 7 moveto
929 13 lineto
959 13 lineto
961 7 lineto
959 1 lineto
929 1 lineto
927 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
933 3 [
[(0000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
961 7 moveto
963 13 lineto
1028 13 lineto
1030 7 lineto
1028 1 lineto
963 1 lineto
961 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
967 3 [
[(0010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1030 7 moveto
1032 13 lineto
1096 13 lineto
1098 7 lineto
1096 1 lineto
1032 1 lineto
1030 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1036 3 [
[(0100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1098 7 moveto
1100 13 lineto
1165 13 lineto
1167 7 lineto
1165 1 lineto
1100 1 lineto
1098 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1104 3 [
[(0000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 7 moveto
1169 13 lineto
1199 13 lineto
1201 7 lineto
1199 1 lineto
1169 1 lineto
1167 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 3 [
[(0100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1201 7 moveto
1203 13 lineto
1233 13 lineto
1235 7 lineto
1233 1 lineto
1203 1 lineto
1201 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1207 3 [
[(0001)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 7 moveto
1237 13 lineto
1268 13 lineto
1270 7 lineto
1268 1 lineto
1237 1 lineto
1235 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1241 3 [
[(0010)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1270 7 moveto
1272 13 lineto
1336 13 lineto
1338 7 lineto
1336 1 lineto
1272 1 lineto
1270 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1276 3 [
[(0000)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1338 7 moveto
1340 13 lineto
1439 13 lineto
1441 7 lineto
1439 1 lineto
1340 1 lineto
1338 7 lineto
stroke
grestore
gsave
/Gothic findfont 8 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1344 3 [
[(0100)]
] 9 0 0.85 0 false DrawText
grestore
gsave
0 176 moveto
1444 176 lineto
1444 0 lineto
0 0 lineto
closepath
clip
newpath
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
211 665 translate
1.3321 1.28261 scale
0 -14 translate
0 14 1084 60 SetClipRegion
%% including "/tmp/tmp1mx53890.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.maxis
%%CreationDate: Wed Mar 31 10:52:35 2021
%%BoundingBox: 0 14 1084 60
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Gothic
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 0 def
%%IncludeResource: font Gothic
%%EndSetup

%%Page: 1 1
save
0.0 59.0 translate
0.75 0.75 scale
0 -59 translate
0 59 moveto 1444 59 lineto 1444 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 59 moveto
1444 59 lineto
1444 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 58 moveto
1442 58 lineto
1442 1 lineto
1 1 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 1 moveto
2 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
71 1 moveto
71 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
139 1 moveto
139 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
208 1 moveto
208 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
276 1 moveto
276 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
345 1 moveto
345 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
347 6 [
[(10,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
413 1 moveto
413 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
482 1 moveto
482 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
550 1 moveto
550 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
619 1 moveto
619 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
687 1 moveto
687 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
689 6 [
[(20,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
756 1 moveto
756 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
824 1 moveto
824 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
893 1 moveto
893 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
961 1 moveto
961 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1030 1 moveto
1030 16 lineto
stroke
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1032 6 [
[(30,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1098 1 moveto
1098 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1167 1 moveto
1167 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1235 1 moveto
1235 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1304 1 moveto
1304 3 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1372 1 moveto
1372 16 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
1430 7 translate
6 7 true matrix {
<40607078706040>
} imagemask
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1374 6 [
[(4)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1381 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1388 6 [
[(,)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1395 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1402 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1409 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1416 6 [
[(,)]
] 11 0 0.85 0 false DrawText
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
1423 6 [
[(0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1441 1 moveto
1441 3 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 44 moveto
2 1 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 44 moveto
2 30 lineto
92 30 lineto
92 44 lineto
2 44 lineto
closepath
fill
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
5 32 [
[(Baseline = 0)]
] 11 0 0.85 0 false DrawText
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1441 30 moveto
1441 1 lineto
stroke
grestore
gsave
0.498 0.498 0.498 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1442 30 moveto
1296 30 lineto
1296 16 lineto
1442 16 lineto
1442 30 lineto
closepath
fill
grestore
gsave
/Gothic findfont 9 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
1298 18 [
[(TimeA = 42,000,000ps)]
] 11 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
restore showpage

%%Trailer
end
%%EOF

